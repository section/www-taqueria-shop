apiVersion: v1
kind: Service
metadata:
  name: router-service
spec:
  selector:
    app: router
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: router
  labels:
    app: router
spec:
  replicas: 2
  selector:
    matchLabels:
      app: router
  template:
    metadata:
      labels:
        app: router
    spec:
      volumes:
        - name: config-mount
          configMap:
            name: router-config
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "next-hop"
      containers:
        - name: router
          image: 'gcr.io/section-io/openresty:1.19.3.1-k3'
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: SECTION_PROXY_NAME
              value: router
            - name: REDIS_HOST
              value: 127.0.0.1
            - name: PROXY_REGO_KEY
              value: abc
            - name: LIST_KEY_PREFIX
              value: abc
            - name: LIST_KEY_SUFFIX
              value: abc
            - name: VERSION
              value: one
          resources:
            limits:
              cpu: '.5'
              memory: 512Mi
            requests:
              cpu: '.5'
              memory: 512Mi
          volumeMounts:
            - name: config-mount
              readOnly: true
              mountPath: /opt/proxy_config
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: Always
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1